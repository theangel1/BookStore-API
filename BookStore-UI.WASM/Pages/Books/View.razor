@page "/books/view/{id}"
@inject IBookRepository _repo

<h3>View book details</h3>


@if (int.Parse(Id) < 1 || string.IsNullOrWhiteSpace(Id))
{
    <ErrorMessage Message="Invalid selection. Please try again"></ErrorMessage>
}
else if (Model == null)
{
    <LoadingMessage Message="Loading book details"></LoadingMessage>
}
else
{
<div class="row">
    <div class="col-6">
        <table class="table table-responsive">
            <tr>
                <td>
                    <strong>Title</strong>
                </td>
                <td>@Model.Title</td>
            </tr>
            <tr>
                <td>
                    <strong>Author</strong>
                </td>
                <td>
                    @if (Model.Author == null)
                    {
                        <span class="text-muted">No author recorded</span>
                    }
                    else
                    {
                        <a href="/authors/view/@Model.AuthorId">@Model.Author.Firstname @Model.Author.Lastname</a>
                    }
                </td>
            </tr>
            <tr>
                <td>
                    <strong>Summary</strong>
                </td>
                <td>@Model.Summary</td>
            </tr>
            <tr>
                <td>
                    <strong>Published year</strong>
                </td>
                <td>@Model.Year</td>
            </tr>
            <tr>
                <td>
                    <strong>ISBN</strong>
                </td>
                <td>@Model.Isbn</td>
            </tr>

        </table>
    </div>
</div>
<div class="col-4">
    <img src="@string.Format("data:image/png;base64,{0}",Model.File)" style="height300px; width:300px"/>
    <h3 class="text-center text-info">@Model.Price</h3>
</div>
}

<a href="/books/" class="btn btn-secondary">
    <span class="oi oi-media-skip-backward"></span>
    Back to list
</a>



@code {
    [Parameter]
    public string Id { get; set; }

    private Book Model = new Book();
    protected override async Task OnInitializedAsync()
    {
        int id = Convert.ToInt32(Id);
        Model = await _repo.Get(Endpoints.BooksEndpoint, id);
    }
}
