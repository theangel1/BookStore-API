@page "/books/"
@attribute [Authorize]
@inject IBookRepository _repo

<h3>Index</h3>

@if (Model == null)
{
    <LoadingMessage Message="Loading books"></LoadingMessage>
}
else
{
<AuthorizeView Roles="Administrator">
    <a href="/books/create" class="btn btn-primary">
        <span class="oi oi-plus"></span>
        Create book
    </a>
</AuthorizeView>
    <br />

    @if (Model.Count < 1)
    {
        <LoadingMessage Message="No books in data store"></LoadingMessage>
    }
    else
    {
        <table class="table table-responsive">
            <thead>
                <tr>
                    <th></th>
                    <th>Title</th>
                    <th>Price</th>
                    <th>Author</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var book in Model)
                {
                <tr>
                    <td>
                        <img src="/uploads/@book.Image" style="height:50px;width:50px"/>
                    </td>
                    <td>@book.Title</td>
                    <td>@string.Format("{0:C}", book.Price)</td>
                    <td>
                        @if (book.Author == null)
                        {
                            <p>Sin autores</p>
                        }
                        else
                        {
                            @book.Author.Firstname @book.Author.Lastname
                        }

                    </td>
                    <td>
                        <a href="/books/view/@book.Id" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                        <AuthorizeView Roles="Administrator">
                            <a href="/books/edit/@book.Id" class="btn btn-warning">
                                <span class="oi oi-pencil"></span>
                            </a>
                            <a href="/books/delete/@book.Id" class="btn btn-danger">
                                <span class="oi oi-delete"></span>
                            </a>
                        </AuthorizeView>
                    </td>
                </tr>
                }
            </tbody>
        </table>
    }
}

@code {
    private IList<Book> Model;

    protected async override Task OnInitializedAsync()
    {
        Model = await _repo.Get(Endpoints.BooksEndpoint);
    }
}
